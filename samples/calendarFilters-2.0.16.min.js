// File: calendarFilters.js
function CalendarFiltersWidget(a, b) {
    function c(a, b) {
        for (let c = 0; c < t[a].length; c++) t[a][c](b);
    }
    function d(a, b) {
        t[a] && t[a].push(b);
    }
    function e(a) {
        let b = $("#ipoCalendarData");
        $('[id^="timeFrame_"]').removeClass("toggled"),
            $('[id="timeFrame_' + a + '"]').addClass("toggled");
        k(!0, !1);
        o(), m(k(!0, !1)), b.length && f(a, b);
    }
    function f(a, b) {
        b.trigger("sorton", a.is("recent") ? [[[0, 1]]] : [[[0, 0]]]);
    }
    function g(a, b) {
        $("#dateFrom").val(a), $("#dateTo").val(b);
        let c = k(!1, !0);
        (c.currentTab = "custom"), m(c);
    }
    function h() {
        let a = k(!0, !1);
        (a.submitFilters = 1), m(a);
    }
    function j(a) {
        m(a);
    }
    function k(b) {
        let c = $(
            '[id^="timeFrame_"].toggled',
            "#" + a + "CalendarFilters"
        ).attr("id");
        c = c ? c.replace("timeFrame_", "") : "custom";
        let d = $("#dateFrom").val(),
            e = $("#dateTo").val(),
            f = $("#calendarFilterSearchText").val(),
            g = $("#calendarFilterSearchText").attr("placeholder");
        f && f == g && (f = "");
        let h = {};
        return (
            $('[id^="calendarFilterBox_"]').each(function () {
                let a = $(this).attr("id");
                (a = a.replace("calendarFilterBox_", "")),
                    (h[a] = []),
                    $('[name="' + a + '[]"]').each(function () {
                        this.checked && h[a].push(this.value);
                    });
            }),
            (b && "custom" != c) || ((h.dateFrom = d), (h.dateTo = e)),
            "holiday" === a && (h.country = $('[name="country"]').val()),
            "economic" === a &&
                ((h.timeZone = $("#timeZone").val()),
                (h.timeFilter = $('[name="timeFilter"]:checked').val())),
            "ico" === a &&
                ((h.number_range = $("#number_range").val()),
                (h.number_filter = $("#number_filter").val()),
                (h.percent_range = $("#percent_range").val())),
            b && (h.currentTab = c),
            f && (h.searchText = f),
            h
        );
    }
    function l(a) {
        let b;
        switch (a) {
            case "ico":
                b = "/crypto/Service/getCalendarFilteredData";
                break;
            default:
                b = "/" + a + "-calendar/Service/getCalendarFilteredData";
        }
        return b;
    }
    function m(b) {
        u.bind_scroll_handler && $(window).unbind("scroll", u.handler),
            void 0 === b.limit_from ? (b.limit_from = 0) : b.limit_from++,
            (u.inProcess = !0);
        let d = l(a);
        $.ajax({
            url: d,
            type: "POST",
            data: b,
            beforeSend: function () {
                b.limit_from < 1 &&
                    $("#" + a + "CalendarData").addClass("displayNone"),
                    $("#" + a + "CalendarLoading").show();
            },
            complete: function () {
                o(),
                    "function" == typeof resetCalendarSorter &&
                        resetCalendarSorter(),
                    "function" == typeof setFloatingHeaderWidths &&
                        setFloatingHeaderWidths();
            },
            success: function (d) {
                let e = d;
                if (
                    ("string" == typeof d && (e = JSON.parse(d)),
                    (u.bind_scroll_handler = e.bind_scroll_handler),
                    $("#" + a + "CalendarLoading").hide(),
                    e.pairsToRegister &&
                        $(window).trigger(
                            "socketRetry",
                            JSON.parse(e.pairsToRegister)
                        ),
                    $.isUn(e.newPairIds) ||
                        (components.getMoreEventNewsAnalysisMultiplePairs(
                            "",
                            e.newPairIds,
                            "news",
                            "ipo",
                            !0
                        ),
                        components.getMoreEventNewsAnalysisMultiplePairs(
                            "",
                            e.newPairIds,
                            "article",
                            "ipo",
                            !0
                        )),
                    b.limit_from > 0)
                ) {
                    if (e.rows_num) {
                        if (e.parseDataBy) {
                            let f = $("<table>" + e.data + "</table>"),
                                g = f.find("tr").first();
                            switch (e.parseDataBy) {
                                case "trTheDay":
                                    g
                                        .find("#theDay" + b.last_time_scope)
                                        .size() && g.remove();
                            }
                            f.find("tbody").size()
                                ? (e.data = f.find("tbody").html())
                                : (e.data = f.html());
                        }
                        $("#" + a + "CalendarData tbody").append(e.data);
                    }
                } else
                    $("#" + a + "CalendarData tbody")
                        .empty()
                        .html(e.data);
                if (
                    ($("#" + a + "CalendarData").removeClass("displayNone"),
                    e.dateFrom && e.dateTo && q(n(e.dateFrom), n(e.dateTo)),
                    $.datepicker &&
                        $.datepicker._curInst &&
                        $.datepicker._curInst.input.data(
                            "prevSelected",
                            $.datepicker._curInst.input.val()
                        ),
                    s(e.timeframe ? e.timeframe : ""),
                    void 0 !== e.params && void 0 !== e.params.timezoneFormat)
                ) {
                    let h = $("#timeZoneGmtOffsetFormatted");
                    h.length > 0 && h.html(e.params.timezoneFormat);
                }
                let i = b || {};
                (void 0 === e.showMore && void 0 === e.noresult) ||
                    (i.showMore = !1 !== e.showMore && 1 !== e.noresult),
                    void 0 !== e.pids &&
                        ((i.pids = e.pids),
                        $(window).trigger("socketNewData", [i.pids])),
                    $(window).trigger(CalendarFiltersWidget.eventName, [i]),
                    (b.submitFilters = 0),
                    a.isnt("ico") &&
                        e.bind_scroll_handler &&
                        (e.last_time_scope &&
                            (b.last_time_scope = e.last_time_scope),
                        (u.filtersParams = b),
                        (u.inProcess = !1),
                        (u.id = a + "CalendarData"),
                        $(window).bind("scroll", u.handler)),
                    c("update", { query: b, result: e });
            },
        });
    }
    function n(a) {
        let b = a.split(/[\/\-]+/);
        return b.length && 3 !== b.length
            ? new Date()
            : b[2].length > 2
            ? new Date(b[2] + "-" + b[0] + "-" + b[1])
            : new Date(b[0] + "-" + b[1] + "-" + b[2]);
    }
    function o() {
        $("#filterStateAnchor").hasClass("active") &&
            ($("#filtersWrapper").slideToggle("slow"),
            $("#filterStateAnchor").removeClass("active"));
    }
    function p() {
        let a = JSON.parse(b);
        $('input[type="checkbox"]', "#filtersWrapper").attr("checked", !1),
            $('input[type="radio"]', "#filtersWrapper").attr("checked", !1),
            $.each(a, function (b, c) {
                if (a[b]) {
                    let d = a[b].toString();
                    if (d) {
                        let e = d.split(",");
                        for (i = 0; i < e.length; i++) {
                            let f = "#" + b + e[i].toString();
                            $(f).attr("checked", !0);
                        }
                    }
                }
            });
    }
    function q(a, b) {
        $("#dateFrom").val(r(a)), $("#dateTo").val(r(b));
        let c = $.datepicker.formatDate(
                $.datepicker.regional[""].dateFormat,
                a
            ),
            d = $.datepicker.formatDate(
                $.datepicker.regional[""].dateFormat,
                b
            );
        $("#picker").val(c + " - " + d),
            $("#widgetFieldDateRange").text(c + " - " + d);
    }
    function r(a) {
        if (!a || !a.getDate) return "";
        let b,
            c = a.getDate();
        b = c < 10 ? "0" + c : c;
        let d,
            e = a.getMonth() + 1;
        return (d = e < 10 ? "0" + e : e), a.getFullYear() + "-" + d + "-" + b;
    }
    function s(a) {
        a && "custom" != a
            ? ($("#timeframe").val(a),
              $('[id^="timeFrame_"]').removeClass("toggled"),
              $('[id="timeFrame_' + a + '"]').addClass("toggled"))
            : ($('[id^="timeFrame_"]').removeClass("toggled"),
              $("#datePickerToggleBtn").addClass("toggled"));
    }
    let t = { update: [] },
        u = {
            id: null,
            inProcess: !1,
            filtersParams: {},
            bind_scroll_handler: !1,
            call: function () {
                this.inProcess ||
                    ((this.filtersParams.byHandler = !0),
                    m(this.filtersParams));
            },
            handler: function () {
                let a = u;
                a.id && remainToBottom(a.id) < 150 && a.call();
            },
        };
    (this.on = d),
        (this.timeFrameFilter = e),
        (this.innerFiltersSubmit = h),
        (this.searchBoxFilter = j),
        (this.datePickerFilter = g),
        (this.restoreDefaultFilters = p),
        (this.strToDate = n),
        (this.getFilteredDataHandler = u);
}
function changeFiltersVisibility(a) {
    $(document).scrollTop() > 392 &&
        a &&
        $("#filtersWrapper").is(":visible") &&
        $("#ecoCalTabsTop").offset() &&
        $.scrollTo($("#ecoCalTabsTop").offset().top - 40),
        $("#filtersWrapper").slideToggle("slow"),
        $("#filterStateAnchor").hasClass("active")
            ? $("#filterStateAnchor").removeClass("active")
            : $("#filterStateAnchor").addClass("active");
}
function selectAll(a) {
    $("input[name='" + a + "']").attr("checked", "checked");
}
function clearAll(a) {
    $("input[name='" + a + "']").removeAttr("checked");
}
(CalendarFiltersWidget.eventName = "calendarFilters-DataChanged-Event"),
    $(function () {
        $("#filterStateAnchor").click(changeFiltersVisibility);
    });
